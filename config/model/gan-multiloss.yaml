_target_: models.nocs.get_nocs_resnet50_fpn

num_classes: 7

# pretrained mrcnn weights
maskrcnn_weights: 
  _target_: hydra.utils.get_object
  path: torchvision.models.detection.mask_rcnn.MaskRCNN_ResNet50_FPN_Weights.DEFAULT

# # pretrained nocs weights
load:
#   path: checkpoints/gan-nocs/gan-with-l2/2023-10-17_15-50-32/0221_000000.pth
#   ignore_keys: 

# nocs loss config
nocs_loss:
  _target_: torch.nn.ModuleDict
  modules:
    'discriminator':
      # _target_: models.discriminators.MultiDiscriminatorWithOptimizer
      # discriminators:
      #   _target_: models.discriminators.get_multiple_discriminators
      #   disc_type: 
      #     _target_: hydra.utils.get_object
      #     path: models.discriminators.Discriminator
      #   count: 7
      # num_classes: 7 # Number of discriminators to create
      # logger: 
      #   _target_: hydra.utils.get_method
      #   path: wandb.log
      # optim_args:
      #   lr: 0.0002
      #   betas: [0.5, 0.999]
      #   # weight_decay: 1e-6

      _target_: models.discriminators.MultiClassDiscriminatorWithOptimizer
      logger: 
        _target_: hydra.utils.get_method
        path: wandb.log
      discriminator:
        _target_: models.discriminators.Discriminator
        feat_ch: 128
        out_ch: 7
        in_ch: 3
      optim_args:
        lr: 0.0002
        betas: [0.5, 0.999]
        # weight_decay: 1e-6

            
      # _target_: models.discriminators.MultiClassDiscriminatorWithOptimizer
      # logger: 
      #   _target_: hydra.utils.get_method
      #   path: wandb.log
      # discriminator:
      #   _target_: models.discriminators.Discriminator
      #   feat_ch: 128
      #   out_ch: 7
      #   in_ch: 4
      # optim_args:
      #   lr: 0.0002
      #   betas: [0.5, 0.999]
      #   # weight_decay: 1e-6


    'mse':
      _target_: torch.nn.MSELoss
      reduction: mean

discriminator_steps_per_batch: 5

loss_weights: 
  # 'discriminator': 0.25
  # 'mse': 1.0
  'mse':
    _target_: utils.dummy_rate_setter.DummyRateSetter
    rates: [1.0]
  'discriminator':
    _target_: utils.dummy_rate_setter.DummyRateSetter 
    # rates: [1.0]
    rates: [0.5, 1.0]
    inflections: [20000]


# feat_ch: 16


#### NOCS head config ##########################
nocs_head_params:
  num_bins: 1
  mode: regression
  head_per_channel: True
  # head_per_class: True
  # net_style: experimental
  # layers: 

#### Post processing params ####################

# rpn_nms_thresh: 0.3   # default -> 0.7
# rpn_score_thresh: 0.5 # default -> 0.0
box_score_thresh: 0.7
# box_nms_thresh:   0.3