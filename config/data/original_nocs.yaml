# 0, 40, 46, rand, rand, 64, 42
synset_names : 
  - BG      #0
  - bottle  #1
  - bowl    #2
  - camera  #3
  - can     #4
  - laptop  #5
  - mug     #6
            
class_map: 
  bottle: bottle
  bowl: bowl
  cup: mug
  laptop: laptop

camera_dir: ./data/original_nocs_data/camera
real_dir:   ./data/original_nocs_data/real
coco_dir:   ./data/original_nocs_data/coco

batch_size: 6
steps_per_epoch: 1000
depth_scale: 0.001  # mm to m

common_configs:
  #################################################################################################################################
  # NOTE: deactivated/commented-out. Weird and dealt with by mrcnn.
  IMAGE_MAX_DIM: 800
  IMAGE_MIN_DIM: 1024
  IMAGE_PADDING: True  # currently, the False option is not supported
  #################################################################################################################################

  OBJ_MODEL_DIR: ./data/original_nocs_data/obj_models

  MEAN_PIXEL: [123.7, 116.8, 103.9]
  MAX_GT_INSTANCES: 20

  # If enabled, resizes instance masks to a smaller size to reduce
  # memory load. Recommended when using high-resolution images.
  USE_MINI_MASK: False  # NOTE: this is a change from oriinal code
  MINI_MASK_SHAPE: [28, 28]  # (height, width) of the mini-mask

training:
  _target_: datasets.original_nocs.dataset_wrapper.NOCSDataloader
  
  batch_size: ${data.batch_size}
  steps_per_epoch: ${data.steps_per_epoch}
  augment: True
  shuffle: True
  class_map: ${data.class_map}

  collate: 
    _target_: hydra.utils.get_method
    path: datasets.original_nocs.collate_tools.collate_fn

  dataset:
    config: ${data.common_configs}
    _target_: datasets.original_nocs.dataset.NOCSDataset
    synset_names: ${data.synset_names}
    subset: 'train'
    depth_scale: ${data.depth_scale}
    
  data_info: 
    Real:
      dataset_dir: ${data.real_dir}
      weight: 3 
      intrinsics: [[591.0125, 0, 322.525], [0, 590.16775, 244.11084], [0, 0, 1]]
      ignore_nocs: False
    CAMERA:
      dataset_dir: ${data.camera_dir}
      weight: 1
      intrinsics: [[577.5, 0, 319.5], [0., 577.5, 239.5], [0., 0., 1.]]
    coco:
      dataset_dir: ${data.coco_dir}
      weight: 1
      intrinsics: 

validation:
  _target_: datasets.original_nocs.dataset_wrapper.NOCSDataloader
  
  batch_size: ${data.batch_size}
  steps_per_epoch: ${data.steps_per_epoch}
  augment: False
  shuffle: True
  class_map: ${data.class_map}

  collate: 
    _target_: hydra.utils.get_method
    path: datasets.original_nocs.collate_tools.collate_fn

  dataset:
    config: ${data.common_configs}
    _target_: datasets.original_nocs.dataset.NOCSDataset
    synset_names: ${data.synset_names}
    subset: 'val'
    depth_scale: ${data.depth_scale}
    
  data_info:
    Real:
      dataset_dir: ${data.real_dir}
      weight: 1 
      intrinsics: [[591.0125, 0, 322.525], [0, 590.16775, 244.11084], [0, 0, 1]]
    CAMERA:
      dataset_dir: ${data.camera_dir}
      weight: 1
      intrinsics: [[577.5, 0, 319.5], [0., 577.5, 239.5], [0., 0., 1.]]

testing:
  _target_: datasets.original_nocs.dataset_wrapper.NOCSDataloader
  
  batch_size: ${data.batch_size}
  steps_per_epoch: ${data.steps_per_epoch}
  augment: False
  shuffle: True
  class_map: ${data.class_map}

  collate: 
    _target_: hydra.utils.get_method
    path: datasets.original_nocs.collate_tools.collate_fn

  dataset:
    config: ${data.common_configs}
    _target_: datasets.original_nocs.dataset.NOCSDataset
    synset_names: ${data.synset_names}
    subset: 'test'
    depth_scale: ${data.depth_scale}
    
  data_info: 
    Real:
      dataset_dir: ${data.real_dir}
      weight: 1 
      intrinsics: [[591.0125, 0, 322.525], [0, 590.16775, 244.11084], [0, 0, 1]]
    # CAMERA:
    #   dataset_dir: ${data.camera_dir}
    #   weight: 1
    #   intrinsics: [[577.5, 0, 319.5], [0., 577.5, 239.5], [0., 0., 1.]]